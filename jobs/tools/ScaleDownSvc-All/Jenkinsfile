def clusterNS

pipeline {
    agent any

    parameters {
        choice(name: 'clusterID', choices: ['1', '2', '3'], description: 'Cluster ID list; ignore for single cluster')
    }

    stages {
        stage('Set NS variable') {
            steps {
                script {
                    // Get the parent of the parent-folder of the job
                    clusterNS = env.JOB_NAME.split('/')[0]
                    env.clusterNS = clusterNS
                }
                echo "NS variable is set to: ${clusterNS}"
            }
        }
        stage('Check & Approve') {
            steps {
                input message: "Do you want to scled down the deployments in $clusterNS namespace? Please confirm.", ok: 'Proceed', submitterParameter: 'APPROVER'
            }
        }
        stage('Clone KF configs') {
            steps {
                withCredentials([sshUserPrivateKey(credentialsId: 'rammanokar_github', keyFileVariable: 'SSH_KEY')]) {
                    sh '''#!/usr/bin/env bash
                    export GIT_SSH_COMMAND="ssh -i $SSH_KEY"
                    rm -rf kf-configs
                    git clone --depth 1 git@github.com:OrangeScape/kf-configs.git
                    '''
                }
            }
        }        
        stage('Scale down Deployments') {
            steps {
                sh"""
                cd kf-configs
                source activate $clusterNS ${params.clusterID}
                deploymentList="$(kubectl get deployment -l "app.kissflow.com/version in (4)" -o jsonpath="{.items[*].metadata.name}")"
                kubectl scale deployment --replicas=0 $deploymentList
                """
            }
        }
    }
}
