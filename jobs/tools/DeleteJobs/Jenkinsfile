def clusterNS

pipeline {
    agent any

    environment {
        SSH_KEY = credentials('rammanokar_github')
    }

    parameters {
        choice(name: 'clusterID', choices: ['1', '2', '3'], description: 'Cluster ID list; ignore for single cluster')

        string(
            name: 'k8sJobName', 
            description: 'Name of the Job to be deleted; use regex like schedulerv2-cron-* to delete multiple jobs. '
        )
    }

    stages {
        stage('Set NS variable') {
            steps {
                script {
                    // Get the parent of the parent-folder of the job
                    clusterNS = env.JOB_NAME.split('/')[0]
                    env.clusterNS = clusterNS
                }
                echo "NS variable is set to: ${clusterNS}"
            }
        }
        stage('Clone KF configs') {
            steps {
                    sh '''#!/usr/bin/env bash
                    export GIT_SSH_COMMAND="ssh -i $SSH_KEY"
                    rm -rf kf-configs
                    git clone --depth 1 git@github.com:OrangeScape/kf-configs.git
                    '''
            }
        }
        stage('Delete Job') {
            steps {
                // Activate the environment variables and generate the kubeconfig
                sh """#!/usr/bin/env bash
                cd kf-configs
                ./create-pegasi.sh $clusterNS 2>&1 >/dev/null || true
                source activate $clusterNS ${params.clusterID}
                kubectl get jobs -o name | grep -E ${k8sJobName}
                JOB=\$(kubectl get jobs -o name | grep -E ${k8sJobName})
                if [[ -z \$JOB ]]; then 
                    echo "Mentioned Job ${k8sJobName} is not found, cancelling deletion of Job"
                else
                kubectl get jobs -o name | grep -E ${k8sJobName} | xargs kubectl delete 
                fi
                """
            }
        }
    }
}
