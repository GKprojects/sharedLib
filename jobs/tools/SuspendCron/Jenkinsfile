@Library('sharedLib@main') _
def clusterNS

pipeline {
    agent any

    environment {
        SSH_KEY = credentials('rammanokar_github')
    }

    parameters {
        choice(name: 'CronJob', choices: getCronJobNames(env.JOB_NAME), description: 'CronJob Name')
    }

    stages {
        stage('Set NS variable') {
            steps {
                script {
                    // Get the parent of the parent-folder of the job
                    clusterNS = env.JOB_NAME.split('/')[0]
                    env.clusterNS = clusterNS
                }
                echo "NS variable is set to: ${clusterNS}"
            }
        }
        stage('Cloning KF-configs') {
            steps {
                    sh '''#!/usr/bin/env bash
                    export GIT_SSH_COMMAND="ssh -i $SSH_KEY"
                    rm -rf kf-configs
                    git clone --depth 1 git@github.com:OrangeScape/kf-configs.git
                    '''
            }
        }
        stage('Suspend cron') {
            steps {
                    sh '''#!/usr/bin/env bash
                    cd kf-configs
                    ./create-pegasi.sh $clusterNS 2>&1 >/dev/null || true
                    source activate $clusterNS 1 # CronJobs are present only in Cluster 1
                    kubectl patch cronjobs ${CronJob}-cron -p '{"spec" : {"suspend" : true }}'
                    '''
            }
        }
    }
}
