@Library('sharedLib@main') _
def clusterNS

pipeline {
    agent any

    parameters {
        choice(name: 'Deployment', choices: getDeploymentNames(env.JOB_NAME), description: 'Deployment Name')
        choice(name: 'clusterID', choices: ['1', '2', '3'], description: 'Cluster ID list; ignore for single cluster')
    }

    stages {
        stage('Set NS variable') {
            steps {
                script {
                    // Get the parent of the parent-folder of the job
                    clusterNS = env.JOB_NAME.split('/')[0]
                    env.clusterNS = clusterNS
                }
                echo "NS variable is set to: ${clusterNS}"
            }
        }
        stage('Clone KF configs') {
            steps {
                withCredentials([sshUserPrivateKey(credentialsId: 'rammanokar_github', keyFileVariable: 'SSH_KEY')]) {
                    sh '''#!/usr/bin/env bash
                    export GIT_SSH_COMMAND="ssh -i $SSH_KEY"
                    rm -rf kf-configs
                    git clone --depth 1 git@github.com:OrangeScape/kf-configs.git
                    '''
                }
            }
        }
        stage('Scale DOWN Deployment') {
            steps {
              script {
                    if (params.DEPLOYMENT_NAME == '') {
                        error("Deployment name must be provided.")
                    }
                    sh """#!/usr/bin/env bash
                    cd kf-configs
                    source activate $clusterNS ${params.clusterID}
                    kubectl get deployment/${params.Deployment}-service
                    echo "Scaling Down the ${params.Deployment}-service deployment in  $clusterNS ${params.clusterID} namespace"
                    kubectl scale deployment/${params.Deployment}-service --replicas=0 
                    echo "Current status of the deployment" 
                    kubectl get deployment ${params.Deployment}-service
                    """          
                }
            }
        }
    }
}
